apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo
  annotations:
    co.elastic.logs/enabled: "true"
    co.elastic.logs/json.keys_under_root: "true"
    co.elastic.logs/json.ignore_decoding_error: "true"
    co.elastic.logs/json.overwrite_keys: "true"
    co.elastic.logs/json.add_error_key: "true"
    co.elastic.logs/json.expand_keys: "true"
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: todo
  strategy:
    type: Recreate 
  template: 
    metadata: 
      labels: 
        app: todo
      annotations:
        co.elastic.logs/enabled: "true"
        co.elastic.logs/json.keys_under_root: "true"
        co.elastic.logs/json.ignore_decoding_error: "true"
        co.elastic.logs/json.overwrite_keys: "true"
        co.elastic.logs/json.add_error_key: "true"
        co.elastic.logs/json.expand_keys: "true"
    spec: 
      initContainers:
        - name: init-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of Postgres Server deployment"; while ! nc -z postgres 5432; do sleep 1; printf "-"; done; echo -e "  >> Postgres DB Server has started";']
        - name: init-localstack
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of LocalStack Server deployment"; while ! nc -z localstack 4566; do sleep 1; printf "-"; done; echo -e "  >> LocalStack Server has started";']
        - name: init-elasticsearch
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of ElasticSearch Server deployment"; while ! nc -z elasticsearch 9200; do sleep 1; printf "-"; done; echo -e "  >> ElasticSearch Server has started";']
        - name: init-kibana
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of Kibana Server deployment"; while ! nc -z kibana 5601; do sleep 1; printf "-"; done; echo -e "  >> Kibana Server has started";']
      containers:
        - name: todo
          image: aborgesrodrigues/todo
          imagePullPolicy: Never
          resources:
            requests:
              memory: "128Mi"
              cpu: "500m"
            limits:
              memory: "256Mi"
              cpu: "1000m"    
          env:
            - name: CONN_STRING
              value: host=postgres user=pguser password=pguser dbname=todo port=5432 sslmode=disable
            - name: AUDITLOG_S3_BUCKET
              value: "audit-local"
            - name: AUDITLOG_S3_DIRECTORY
              value: "todo-api/"
            - name: AUDITLOG_S3_ENDPOINT
              value: "http://localstack:4566"
            - name: AUDITLOG_S3_REGION
              value: "us-east-1"
            - name: AWS_ACCESS_KEY_ID
              value: "test"
            - name: AWS_SECRET_ACCESS_KEY
              value: "test"
            - name: AWS_SESSION_TOKEN
              value: "test"
          ports:
            - containerPort: 8080
              name: todo                                            
